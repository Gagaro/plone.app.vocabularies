from zope.interface import implementsfrom zope.interface import directlyProvidesfrom plone.app.vocabularies.interfaces import ISlicableVocabularyclass SlicableVocabulary(object):    """    A tokenized voacabulary in which the results can be sliced.    """    implements(ISlicableVocabulary)    def __init__(self, terms, context, *interfaces):        self._terms = terms        self._context = context        if interfaces:            directlyProvides(self, *interfaces)    def __len__(self):        return len(self._terms)    def __getitem__(self, start, stop=None):        if isinstance(start, slice):            slic = start            start = slic.start            stop = slic.stop        for item in self._terms[start:stop]:            yield self.getTerm(item)